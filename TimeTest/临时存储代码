dispatch_source_t timer;
//如果已经存在 就取消掉
if (_timer) {
dispatch_source_cancel(_timer);
}

__block NSInteger _endTime = 180;

dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
_timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0,queue);
dispatch_source_set_timer(_timer,dispatch_walltime(NULL, 0),1.0*NSEC_PER_SEC, 0); //每秒执行

dispatch_source_set_event_handler(_timer, ^{
if (_endTime < 0) {
dispatch_source_cancel(_timer);
}else {
NSString *str = [Util conversion2HHMMSSTimeStringOfSecond:_endTime];
dispatch_async(dispatch_get_main_queue(), ^{
self.timeLabel.text = str;
});
_endTime--;
}
});

//启动计时
dispatch_resume(_timer);